version: "3.7"

services:

   common:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'common'
      container_name: common
      tty: true
      volumes:
         - /tmp:/tmp
         - /var/run/docker.sock:/var/run/docker.sock
      environment:
         SECRET: somesecrethere
      command: /bin/bash
      networks:
              the_net:

   cap_sys_admin:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'cap_sys_admin'
      container_name: cap_sys_admin
      tty: true
      cap_add:
         - CAP_SYS_ADMIN
      command: /bin/bash
      networks:
              the_net:

   cap_dac_read_search:
      image: init
      build: 
         context: .
         dockerfile: init.dockerfile
      hostname: 'cap_dac_read_search'
      container_name: cap_dac_read_search
      tty: true
      volumes:
         - /tmp/handler:/tmp/handler
      cap_add:
         - CAP_DAC_READ_SEARCH
      command: /bin/bash
      networks:
              the_net:

   cap_dac_override:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'cap_dac_override'
      container_name: cap_dac_override
      tty: true
      volumes:
         - /tmp/handler:/tmp/handler
      cap_add:
         - CAP_DAC_READ_SEARCH
         - CAP_DAC_OVERRIDE
      command: /bin/bash
      networks:
              the_net:

   cap_sys_ptrace:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'cap_sys_ptrace'
      container_name: cap_sys_ptrace
      tty: true
      pid: "host"
      cap_add:
         - CAP_SYS_PTRACE
      command: /bin/bash
      networks:
              the_net:

   cap_sys_module:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'cap_sys_module'
      container_name: cap_sys_module
      tty: true
      pid: "host"
      cap_add:
         - CAP_SYS_MODULE
      command: /bin/bash
      networks:
              the_net:

   privileged:
      image: init
      build:
         context: .
         dockerfile: init.dockerfile
      hostname: 'privileged'
      container_name: privileged
      tty: true
      privileged: true
      command: /bin/bash
      networks:
              the_net:

networks:
    the_net:
      ipam:
        driver: default
        config:
          - subnet: "10.13.37.0/24"
